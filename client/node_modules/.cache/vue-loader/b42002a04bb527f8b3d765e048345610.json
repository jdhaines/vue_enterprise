{"remainingRequest":"/var/www/vue_enterprise/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/vue_enterprise/client/src/components/_base-link.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/vue_enterprise/client/src/components/_base-link.vue","mtime":1565713332545},{"path":"/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js","mtime":1565713649664},{"path":"/var/www/vue_enterprise/client/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1565713477729},{"path":"/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js","mtime":1565713649664},{"path":"/var/www/vue_enterprise/client/node_modules/vue-loader/lib/index.js","mtime":1565713652294}],"contextDependencies":[],"result":["\nexport default {\n  inheritAttrs: false,\n  props: {\n    href: {\n      type: String,\n      default: '',\n    },\n    allowInsecure: {\n      type: Boolean,\n      default: false,\n    },\n    to: {\n      type: Object,\n      default: null,\n    },\n    name: {\n      type: String,\n      default: '',\n    },\n    params: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  computed: {\n    routerLinkTo({ name, params }) {\n      return {\n        name,\n        params,\n        ...(this.to || {}),\n      }\n    },\n  },\n  created() {\n    this.validateProps()\n  },\n  methods: {\n    // Perform more complex prop validations than is possible\n    // inside individual validator functions for each prop.\n    validateProps() {\n      if (process.env.NODE_ENV === 'production') return\n\n      if (this.href) {\n        // Check for non-external URL in href.\n        if (!/^\\w+:/.test(this.href)) {\n          return console.warn(\n            `Invalid <BaseLink> href: ${\n              this.href\n            }.\\nIf you're trying to link to a local URL, provide at least a name or to`\n          )\n        }\n        // Check for insecure URL in href.\n        if (!this.allowInsecure && !/^(https|mailto|tel):/.test(this.href)) {\n          return console.warn(\n            `Insecure <BaseLink> href: ${\n              this.href\n            }.\\nWhen linking to external sites, always prefer https URLs. If this site does not offer SSL, explicitly add the allow-insecure attribute on <BaseLink>.`\n          )\n        }\n      } else {\n        // Check for insufficient props.\n        if (!this.name && !this.to) {\n          return console.warn(\n            `Invalid <BaseLink> props:\\n\\n${JSON.stringify(\n              this.$props,\n              null,\n              2\n            )}\\n\\nEither a \\`name\\` or \\`to\\` is required for internal links, or an \\`href\\` for external links.`\n          )\n        }\n      }\n    },\n  },\n}\n",{"version":3,"sources":["_base-link.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"_base-link.vue","sourceRoot":"src/components","sourcesContent":["<script>\nexport default {\n  inheritAttrs: false,\n  props: {\n    href: {\n      type: String,\n      default: '',\n    },\n    allowInsecure: {\n      type: Boolean,\n      default: false,\n    },\n    to: {\n      type: Object,\n      default: null,\n    },\n    name: {\n      type: String,\n      default: '',\n    },\n    params: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  computed: {\n    routerLinkTo({ name, params }) {\n      return {\n        name,\n        params,\n        ...(this.to || {}),\n      }\n    },\n  },\n  created() {\n    this.validateProps()\n  },\n  methods: {\n    // Perform more complex prop validations than is possible\n    // inside individual validator functions for each prop.\n    validateProps() {\n      if (process.env.NODE_ENV === 'production') return\n\n      if (this.href) {\n        // Check for non-external URL in href.\n        if (!/^\\w+:/.test(this.href)) {\n          return console.warn(\n            `Invalid <BaseLink> href: ${\n              this.href\n            }.\\nIf you're trying to link to a local URL, provide at least a name or to`\n          )\n        }\n        // Check for insecure URL in href.\n        if (!this.allowInsecure && !/^(https|mailto|tel):/.test(this.href)) {\n          return console.warn(\n            `Insecure <BaseLink> href: ${\n              this.href\n            }.\\nWhen linking to external sites, always prefer https URLs. If this site does not offer SSL, explicitly add the allow-insecure attribute on <BaseLink>.`\n          )\n        }\n      } else {\n        // Check for insufficient props.\n        if (!this.name && !this.to) {\n          return console.warn(\n            `Invalid <BaseLink> props:\\n\\n${JSON.stringify(\n              this.$props,\n              null,\n              2\n            )}\\n\\nEither a \\`name\\` or \\`to\\` is required for internal links, or an \\`href\\` for external links.`\n          )\n        }\n      }\n    },\n  },\n}\n</script>\n\n<template>\n  <a v-if=\"href\" :href=\"href\" target=\"_blank\" v-bind=\"$attrs\">\n    <slot />\n  </a>\n  <RouterLink v-else :to=\"routerLinkTo\" v-bind=\"$attrs\">\n    <slot />\n  </RouterLink>\n</template>\n"]}]}