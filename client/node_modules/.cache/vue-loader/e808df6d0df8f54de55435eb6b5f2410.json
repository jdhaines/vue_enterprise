{"remainingRequest":"/var/www/vue_enterprise/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/vue_enterprise/client/src/router/views/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/vue_enterprise/client/src/router/views/login.vue","mtime":1565713332547},{"path":"/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js","mtime":1565713649664},{"path":"/var/www/vue_enterprise/client/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1565713477729},{"path":"/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js","mtime":1565713649664},{"path":"/var/www/vue_enterprise/client/node_modules/vue-loader/lib/index.js","mtime":1565713652294}],"contextDependencies":[],"result":["\nimport Layout from '@layouts/main'\nimport { authMethods } from '@state/helpers'\nimport appConfig from '@src/app.config'\n\nexport default {\n  page: {\n    title: 'Log in',\n    meta: [{ name: 'description', content: `Log in to ${appConfig.title}` }],\n  },\n  components: { Layout },\n  data() {\n    return {\n      username: '',\n      password: '',\n      authError: null,\n      tryingToLogIn: false,\n    }\n  },\n  computed: {\n    placeholders() {\n      return process.env.NODE_ENV === 'production'\n        ? {}\n        : {\n            username: 'Use \"admin\" to log in with the mock API',\n            password: 'Use \"password\" to log in with the mock API',\n          }\n    },\n  },\n  methods: {\n    ...authMethods,\n    // Try to log the user in with the username\n    // and password they provided.\n    tryToLogIn() {\n      this.tryingToLogIn = true\n      // Reset the authError if it existed.\n      this.authError = null\n      return this.logIn({\n        username: this.username,\n        password: this.password,\n      })\n        .then((token) => {\n          this.tryingToLogIn = false\n\n          // Redirect to the originally requested page, or to the home page\n          this.$router.push(this.$route.query.redirectFrom || { name: 'home' })\n        })\n        .catch((error) => {\n          this.tryingToLogIn = false\n          this.authError = error\n        })\n    },\n  },\n}\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/router/views","sourcesContent":["<script>\nimport Layout from '@layouts/main'\nimport { authMethods } from '@state/helpers'\nimport appConfig from '@src/app.config'\n\nexport default {\n  page: {\n    title: 'Log in',\n    meta: [{ name: 'description', content: `Log in to ${appConfig.title}` }],\n  },\n  components: { Layout },\n  data() {\n    return {\n      username: '',\n      password: '',\n      authError: null,\n      tryingToLogIn: false,\n    }\n  },\n  computed: {\n    placeholders() {\n      return process.env.NODE_ENV === 'production'\n        ? {}\n        : {\n            username: 'Use \"admin\" to log in with the mock API',\n            password: 'Use \"password\" to log in with the mock API',\n          }\n    },\n  },\n  methods: {\n    ...authMethods,\n    // Try to log the user in with the username\n    // and password they provided.\n    tryToLogIn() {\n      this.tryingToLogIn = true\n      // Reset the authError if it existed.\n      this.authError = null\n      return this.logIn({\n        username: this.username,\n        password: this.password,\n      })\n        .then((token) => {\n          this.tryingToLogIn = false\n\n          // Redirect to the originally requested page, or to the home page\n          this.$router.push(this.$route.query.redirectFrom || { name: 'home' })\n        })\n        .catch((error) => {\n          this.tryingToLogIn = false\n          this.authError = error\n        })\n    },\n  },\n}\n</script>\n\n<template>\n  <Layout>\n    <form :class=\"$style.form\" @submit.prevent=\"tryToLogIn\">\n      <BaseInputText\n        v-model=\"username\"\n        name=\"username\"\n        :placeholder=\"placeholders.username\"\n      />\n      <BaseInputText\n        v-model=\"password\"\n        name=\"password\"\n        type=\"password\"\n        :placeholder=\"placeholders.password\"\n      />\n      <BaseButton :disabled=\"tryingToLogIn\" type=\"submit\">\n        <BaseIcon v-if=\"tryingToLogIn\" name=\"sync\" spin />\n        <span v-else>\n          Log in\n        </span>\n      </BaseButton>\n      <p v-if=\"authError\">\n        There was an error logging in to your account.\n      </p>\n    </form>\n  </Layout>\n</template>\n\n<style lang=\"scss\" module>\n@import '@design';\n\n.form {\n  text-align: center;\n}\n</style>\n"]}]}