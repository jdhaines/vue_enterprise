{"remainingRequest":"/var/www/vue_enterprise/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/vue_enterprise/client/src/components/nav-bar-routes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/vue_enterprise/client/src/components/nav-bar-routes.vue","mtime":1565713332545},{"path":"/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js","mtime":1565713649664},{"path":"/var/www/vue_enterprise/client/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1565713477729},{"path":"/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js","mtime":1565713649664},{"path":"/var/www/vue_enterprise/client/node_modules/vue-loader/lib/index.js","mtime":1565713652294}],"contextDependencies":[],"result":["\n// Allows stubbing BaseLink in unit tests\nconst BaseLink = 'BaseLink'\n\nexport default {\n  // Functional components are stateless, meaning they can't\n  // have data, computed properties, etc and they have no\n  // `this` context.\n  functional: true,\n  props: {\n    routes: {\n      type: Array,\n      required: true,\n    },\n  },\n  // Render functions are an alternative to templates\n  render(h, { props, $style = {} }) {\n    function getRouteTitle(route) {\n      return typeof route.title === 'function' ? route.title() : route.title\n    }\n\n    // Functional components are the only components allowed\n    // to return an array of children, rather than a single\n    // root node.\n    return props.routes.map((route) => (\n      <BaseLink\n        tag=\"li\"\n        key={route.name}\n        to={route}\n        exact-active-class={$style.active}\n      >\n        <a>{getRouteTitle(route)}</a>\n      </BaseLink>\n    ))\n  },\n}\n",{"version":3,"sources":["nav-bar-routes.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"nav-bar-routes.vue","sourceRoot":"src/components","sourcesContent":["<script>\n// Allows stubbing BaseLink in unit tests\nconst BaseLink = 'BaseLink'\n\nexport default {\n  // Functional components are stateless, meaning they can't\n  // have data, computed properties, etc and they have no\n  // `this` context.\n  functional: true,\n  props: {\n    routes: {\n      type: Array,\n      required: true,\n    },\n  },\n  // Render functions are an alternative to templates\n  render(h, { props, $style = {} }) {\n    function getRouteTitle(route) {\n      return typeof route.title === 'function' ? route.title() : route.title\n    }\n\n    // Functional components are the only components allowed\n    // to return an array of children, rather than a single\n    // root node.\n    return props.routes.map((route) => (\n      <BaseLink\n        tag=\"li\"\n        key={route.name}\n        to={route}\n        exact-active-class={$style.active}\n      >\n        <a>{getRouteTitle(route)}</a>\n      </BaseLink>\n    ))\n  },\n}\n</script>\n\n<style lang=\"scss\" module>\n@import '@design';\n\n.active a {\n  font-weight: 600;\n  color: $color-link-text-active;\n  text-decoration: none;\n  cursor: default;\n}\n</style>\n"]}]}