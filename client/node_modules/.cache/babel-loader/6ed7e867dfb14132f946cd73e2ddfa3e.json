{"remainingRequest":"/var/www/vue_enterprise/client/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/vue_enterprise/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/vue_enterprise/client/src/router/views/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/vue_enterprise/client/src/router/views/login.vue","mtime":1565713332547},{"path":"/var/www/vue_enterprise/client/.babelrc.js","mtime":1565713332537},{"path":"/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js","mtime":1565713649664},{"path":"/var/www/vue_enterprise/client/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1565713477729},{"path":"/var/www/vue_enterprise/client/node_modules/cache-loader/dist/cjs.js","mtime":1565713649664},{"path":"/var/www/vue_enterprise/client/node_modules/vue-loader/lib/index.js","mtime":1565713652294}],"contextDependencies":[],"result":["import _objectSpread from \"/var/www/vue_enterprise/client/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport Layout from '@layouts/main';\nimport { authMethods } from '@state/helpers';\nimport appConfig from '@src/app.config';\nexport default {\n  page: {\n    title: 'Log in',\n    meta: [{\n      name: 'description',\n      content: \"Log in to \".concat(appConfig.title)\n    }]\n  },\n  components: {\n    Layout: Layout\n  },\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      authError: null,\n      tryingToLogIn: false\n    };\n  },\n  computed: {\n    placeholders: function placeholders() {\n      return process.env.NODE_ENV === 'production' ? {} : {\n        username: 'Use \"admin\" to log in with the mock API',\n        password: 'Use \"password\" to log in with the mock API'\n      };\n    }\n  },\n  methods: _objectSpread({}, authMethods, {\n    // Try to log the user in with the username\n    // and password they provided.\n    tryToLogIn: function tryToLogIn() {\n      var _this = this;\n\n      this.tryingToLogIn = true; // Reset the authError if it existed.\n\n      this.authError = null;\n      return this.logIn({\n        username: this.username,\n        password: this.password\n      }).then(function (token) {\n        _this.tryingToLogIn = false; // Redirect to the originally requested page, or to the home page\n\n        _this.$router.push(_this.$route.query.redirectFrom || {\n          name: 'home'\n        });\n      }).catch(function (error) {\n        _this.tryingToLogIn = false;\n        _this.authError = error;\n      });\n    }\n  })\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":";AACA,OAAA,MAAA,MAAA,eAAA;AACA,SAAA,WAAA,QAAA,gBAAA;AACA,OAAA,SAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA;AACA,IAAA,KAAA,EAAA,QADA;AAEA,IAAA,IAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAAA,aAAA;AAAA,MAAA,OAAA,sBAAA,SAAA,CAAA,KAAA;AAAA,KAAA;AAFA,GADA;AAKA,EAAA,UAAA,EAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,IAHA;AAIA,MAAA,aAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GACA,EADA,GAEA;AACA,QAAA,QAAA,EAAA,yCADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAFA;AAMA;AARA,GAdA;AAwBA,EAAA,OAAA,oBACA,WADA;AAEA;AACA;AACA,IAAA,UAJA,wBAIA;AAAA;;AACA,WAAA,aAAA,GAAA,IAAA,CADA,CAEA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,aAAA,KAAA,KAAA,CAAA;AACA,QAAA,QAAA,EAAA,KAAA,QADA;AAEA,QAAA,QAAA,EAAA,KAAA;AAFA,OAAA,EAIA,IAJA,CAIA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAA,KAAA,CADA,CAGA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,YAAA,IAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OATA,EAUA,KAVA,CAUA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAbA,CAAA;AAcA;AAtBA;AAxBA,CAAA","sourcesContent":["<script>\nimport Layout from '@layouts/main'\nimport { authMethods } from '@state/helpers'\nimport appConfig from '@src/app.config'\n\nexport default {\n  page: {\n    title: 'Log in',\n    meta: [{ name: 'description', content: `Log in to ${appConfig.title}` }],\n  },\n  components: { Layout },\n  data() {\n    return {\n      username: '',\n      password: '',\n      authError: null,\n      tryingToLogIn: false,\n    }\n  },\n  computed: {\n    placeholders() {\n      return process.env.NODE_ENV === 'production'\n        ? {}\n        : {\n            username: 'Use \"admin\" to log in with the mock API',\n            password: 'Use \"password\" to log in with the mock API',\n          }\n    },\n  },\n  methods: {\n    ...authMethods,\n    // Try to log the user in with the username\n    // and password they provided.\n    tryToLogIn() {\n      this.tryingToLogIn = true\n      // Reset the authError if it existed.\n      this.authError = null\n      return this.logIn({\n        username: this.username,\n        password: this.password,\n      })\n        .then((token) => {\n          this.tryingToLogIn = false\n\n          // Redirect to the originally requested page, or to the home page\n          this.$router.push(this.$route.query.redirectFrom || { name: 'home' })\n        })\n        .catch((error) => {\n          this.tryingToLogIn = false\n          this.authError = error\n        })\n    },\n  },\n}\n</script>\n\n<template>\n  <Layout>\n    <form :class=\"$style.form\" @submit.prevent=\"tryToLogIn\">\n      <BaseInputText\n        v-model=\"username\"\n        name=\"username\"\n        :placeholder=\"placeholders.username\"\n      />\n      <BaseInputText\n        v-model=\"password\"\n        name=\"password\"\n        type=\"password\"\n        :placeholder=\"placeholders.password\"\n      />\n      <BaseButton :disabled=\"tryingToLogIn\" type=\"submit\">\n        <BaseIcon v-if=\"tryingToLogIn\" name=\"sync\" spin />\n        <span v-else>\n          Log in\n        </span>\n      </BaseButton>\n      <p v-if=\"authError\">\n        There was an error logging in to your account.\n      </p>\n    </form>\n  </Layout>\n</template>\n\n<style lang=\"scss\" module>\n@import '@design';\n\n.form {\n  text-align: center;\n}\n</style>\n"],"sourceRoot":"src/router/views"}]}